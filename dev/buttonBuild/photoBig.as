package buttonBuild{	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.display.Sprite;	import flash.display.Loader;	import flash.display.Bitmap;	import flash.net.URLRequest;	import caurina.transitions.Tweener;	import caurina.transitions.properties.FilterShortcuts;	import caurina.transitions.properties.ColorShortcuts;	import flash.events.MouseEvent;	public class photoBig extends Sprite {		public static var UPDATE:String = 'heightwidthset';		private var locate:String = "";		public var picCaption:String = "";		public var picNum:int;		public var picHeight:int;		public var picWidth:int;		private var picLoader:Loader;		private var pic:Sprite;		private var caption:captionBox;		public function photoBig(c:String,i:int,l:String) {			// constructor code			picNum = i;			locate = l;			picCaption = c;			//_model = m;			FilterShortcuts.init();			ColorShortcuts.init();			addEventListener(Event.ADDED_TO_STAGE,loadPic);		}		function loadPic(event:Event):void {			removeEventListener(Event.ADDED_TO_STAGE,loadPic);			//Create a new loader object to load the thumbnail into			picLoader = new Loader();			//Fires the thumbLoaded function once the thumbnail is loaded into the picLoader object			picLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, picLoaded);			//Load the new thumbnail by concatenating a string of the folder, the name, and Thumb.jpg;			picLoader.load(new URLRequest(String("images/"+locate+".jpg")));		}		private function picLoaded(event:Event):void {			pic = new Sprite();			addChild(pic);			var picRaw:Bitmap = Bitmap(picLoader.content);			picRaw.smoothing = true;			var ratio_orig:Number = picRaw.width / picRaw.height;			if (picRaw.height > 414)			{				picRaw.height = 300;				picRaw.width = 300 * ratio_orig;			}			picHeight = picRaw.height;			picWidth = picRaw.width;			trace("from photoBig: "+picWidth, picHeight);			pic.addChild(picRaw);			pic.width = picWidth;			pic.height = picHeight;			trace("from photoBig again: "+picWidth, picHeight);			setWidthheight();			pic.addEventListener(Event.REMOVED_FROM_STAGE, removedFromStage);		}		private function setWidthheight():void {			dispatchEvent(new Event(photoBig.UPDATE));		}		private function removedFromStage(event:Event) {			trace(picLoader);			pic.removeEventListener(Event.REMOVED_FROM_STAGE, removedFromStage);			pic = null;			picLoader = null;		}	}}