package buttonBuild{	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.display.Sprite;	import flash.display.Shape;	import caurina.transitions.Tweener;	import caurina.transitions.properties.FilterShortcuts;	import caurina.transitions.properties.ColorShortcuts;	import flash.events.MouseEvent;	import flashx.textLayout.compose.StandardFlowComposer;	import flashx.textLayout.container.ContainerController;	import flashx.textLayout.elements.ParagraphElement;	import flashx.textLayout.elements.SpanElement;	import flashx.textLayout.elements.TextFlow;	import flashx.textLayout.formats.*;	import flashx.textLayout.conversion.TextConverter;	import flashx.textLayout.edit.SelectionManager;	public class subMenuBuilder2 extends Sprite {		//private var tween:Tweener		//private var filter:FilterShortcuts		public static var UPDATE:String = 'ButtonClicked';		//private var button:subMenuButton;		private var buttonTitle:String = "";		public var buttonNum:int;		public var buttonLength:int;		private var _model:Object;		private var myShape:Shape;		private var myFrame:Shape;		private var textSpace:Sprite;		private var button:Sprite;		private var bg:Sprite;		private var bgFrame:Sprite;		private var labeltxt:String = "helpful information";		private var _textFlow:TextFlow;		private var cont:ContainerController;		public function subMenuBuilder2(s:String,i:int,v:int,m:Object) {			// constructor code			labeltxt = s;			buttonNum = i;			buttonLength = v;			_model = m;			FilterShortcuts.init();			ColorShortcuts.init();			addEventListener(Event.ADDED_TO_STAGE,menuButtonBuild);		}		private function menuButtonBuild(event:Event):void {			removeEventListener(Event.ADDED_TO_STAGE,menuButtonBuild);			_model.addEventListener('submenuupdated',colorChangeSet);			/*button = new subMenuButton();			addChild(button);			button.buttonLabel.text = buttonTitle;*/			//Tweener.addTween(bgFrame,{_color:0xb2ab79});			button = new Sprite() ;			addChild(button);			bg=new Sprite ();			button.addChild(bg);			myShape = new Shape();			myShape.graphics.beginFill(0xD3C67D,1);			//myShape.graphics.lineStyle(1, 0x000000, .75, true);			myShape.graphics.drawRoundRect(0, 0, 156, 17,5,5);			myShape.graphics.endFill();			bg.addChild(myShape);			bgFrame=new Sprite ();			button.addChild(bgFrame);			myFrame = new Shape() ;			myFrame.graphics.lineStyle(1, 0xb2ab79, .75, true);			myFrame.graphics.lineTo(156, 0);			myFrame.graphics.lineTo(156, 17);			myFrame.graphics.lineTo(0, 17);			myFrame.graphics.lineTo(0, 0);			bgFrame.addChild(myFrame);			//bgFrame.alpha = 0;			//Tweener.addTween(myShape,{_Glow_alpha:.75,_Glow_blurX:10,_Glow_blurY:10,_Glow_color:0xD0D0D0,_Glow_inner:true});			textSpace = new Sprite ();			button.addChild(textSpace);			beginFlow(labeltxt);		}		private function beginFlow(s:String):void {			_textFlow = new TextFlow();			_textFlow.flowComposer = new StandardFlowComposer();			_textFlow = TextConverter.importToFlow(s,TextConverter.PLAIN_TEXT_FORMAT);			_textFlow.textAlign = TextAlign.CENTER;			_textFlow.verticalAlign = VerticalAlign.MIDDLE;			_textFlow.fontFamily = "Optima";			_textFlow.fontLookup = "embeddedCFF";			_textFlow.fontSize = 14;			cont = new ContainerController(textSpace,(myShape.width),(myShape.height));			_textFlow.flowComposer.addController(cont);			_textFlow.interactionManager = new SelectionManager();			_textFlow.flowComposer.updateAllControllers();			buttonFunction();		}		private function buttonFunction():void {			bg.alpha = .5;			button.buttonMode = true;			button.mouseChildren = false;			button.useHandCursor = true;			button.addEventListener(MouseEvent.MOUSE_OVER,buttonOver);			button.addEventListener(MouseEvent.MOUSE_OUT, buttonOut);			button.addEventListener(MouseEvent.MOUSE_DOWN, buttonDown);			button.addEventListener(Event.REMOVED_FROM_STAGE, removedFromStage);		}		private function buttonOver(event:MouseEvent):void {			Tweener.addTween(bgFrame,{time:.3,_color:0xffffff,transition:"easeOutQuad"});			Tweener.addTween(bg,{alpha:1,_color:0xf8efba,time:.3,transition:"easeOutQuad"});		}		private function buttonOut(event:MouseEvent):void {			Tweener.addTween(bg,{alpha:.5,_color:0xd3c57d,time:.3,transition:"easeOutQuad"});			Tweener.addTween(bgFrame,{time:.3,_color:0xb2ab79,transition:"easeOutQuad"});		}		private function buttonDown(event:MouseEvent):void {			dispatchEvent(new Event(subMenuBuilder2.UPDATE));		}		private function colorChangeSet(event:Event):void {			trace("subMenuBuilder: "+_model.subMenuArea);			colorChange(_model.subMenuArea);		}		public function colorChange(i:int):void {			if (i == buttonNum)			{				Tweener.addTween(bgFrame,{time:.3,_color:0xffffff,transition:"easeOutQuad"});				Tweener.addTween(bg,{alpha:1,_color:0xf8efba,time:.3,transition:"easeOutQuad"});				button.removeEventListener(MouseEvent.MOUSE_OVER,buttonOver);				button.removeEventListener(MouseEvent.MOUSE_OUT, buttonOut);				button.removeEventListener(MouseEvent.MOUSE_DOWN, buttonDown);				button.buttonMode = false;				button.useHandCursor = false;			} else			{				Tweener.addTween(bg,{alpha:.5,_color:0xd3c57d,time:.3,transition:"easeOutQuad"});				Tweener.addTween(bgFrame,{time:.3,_color:0xb2ab79,transition:"easeOutQuad"});				button.addEventListener(MouseEvent.MOUSE_OVER,buttonOver);				button.addEventListener(MouseEvent.MOUSE_OUT, buttonOut);				button.addEventListener(MouseEvent.MOUSE_DOWN, buttonDown);				button.buttonMode = true;				button.useHandCursor = true;			}		}		private function removedFromStage(event:Event) {			button.removeEventListener(Event.REMOVED_FROM_STAGE, removedFromStage);			_model.removeEventListener('submenuupdated',colorChangeSet);			//button.removeEventListener(_model.MENUUPDATE,colorChange);			//if (_model.subMenuArea != buttonNum)			//{			button.removeEventListener(MouseEvent.MOUSE_OVER,buttonOver);			button.removeEventListener(MouseEvent.MOUSE_OUT, buttonOut);			button.removeEventListener(MouseEvent.MOUSE_DOWN, buttonDown);			button = null;			_model=null			//}		}	}}