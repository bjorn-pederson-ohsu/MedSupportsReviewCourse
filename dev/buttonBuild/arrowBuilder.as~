package buttonBuild{	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.display.Sprite;	import flash.display.Shape;	import caurina.transitions.Tweener;	import caurina.transitions.properties.FilterShortcuts;	import flash.events.MouseEvent;	public class arrowBuilder extends Sprite {		//private var tween:Tweener		//private var filter:FilterShortcuts		public static var UPDATE:String = 'ButtonClicked';		public var buttonType:String = "";		private var button:Sprite;		private var myFrame:Shape;		//private var _model:Object;		public function arrowBuilder(i:String) {			// constructor code			buttonType = i;			//_model = m;			FilterShortcuts.init();			addEventListener(Event.ADDED_TO_STAGE,buildButton);		}		private function buildButton(event:Event):void {			removeEventListener(Event.ADDED_TO_STAGE,buildButton);			//_model.addEventListener('submenuupdated',colorChangeSet);			button = new Sprite();			addChild(button);			if (buttonType == "up")			{							myFrame = new Shape() ;			myFrame.graphics.moveTo(40,0)			myFrame.graphics.lineStyle(1, 0x000000, 1, true);			myFrame.graphics.beginFill(0xf4f4d8,.65);			myFrame.graphics.lineTo(80,10);			myFrame.graphics.lineTo(80,17);			myFrame.graphics.lineTo(40,10);			myFrame.graphics.lineTo(0,17);			myFrame.graphics.lineTo(0,10);			myFrame.graphics.lineTo(40,0);			myFrame.graphics.endFill();			button.addChild(myFrame);			}			if (buttonType == "down")			{							myFrame = new Shape() ;			myFrame.graphics.moveTo(40,7)			myFrame.graphics.lineStyle(1, 0x000000, 1, true);			myFrame.graphics.beginFill(0xf4f4d8,.65);			myFrame.graphics.lineTo(80,0);			myFrame.graphics.lineTo(80,7);			myFrame.graphics.lineTo(40,17);			myFrame.graphics.lineTo(0,7);			myFrame.graphics.lineTo(0,0);			myFrame.graphics.lineTo(40,10);			myFrame.graphics.endFill();			button.addChild(myFrame);			}			button.alpha = .5;			button.buttonMode = true;			button.mouseChildren = false;			button.useHandCursor = true;			button.addEventListener(MouseEvent.MOUSE_OVER,buttonOver);			button.addEventListener(MouseEvent.MOUSE_OUT, buttonOut);			button.addEventListener(MouseEvent.MOUSE_DOWN, buttonDown);			button.addEventListener(Event.REMOVED_FROM_STAGE, removedFromStage);		}		private function buttonOver(event:MouseEvent):void {			Tweener.addTween(button,{alpha:1,time:.3,transition:"easeOutQuad"});		}		private function buttonOut(event:MouseEvent):void {			Tweener.addTween(button,{alpha:.5,time:.3,transition:"easeOutQuad"});		}		private function buttonDown(event:MouseEvent):void {			dispatchEvent(new Event(arrowBuilder.UPDATE));		}		private function removedFromStage(event:Event) {			button.removeEventListener(Event.REMOVED_FROM_STAGE, removedFromStage);			button.removeEventListener(MouseEvent.MOUSE_OVER,buttonOver);			button.removeEventListener(MouseEvent.MOUSE_OUT, buttonOut);			button.removeEventListener(MouseEvent.MOUSE_DOWN, buttonDown);			button = null;		}	}}