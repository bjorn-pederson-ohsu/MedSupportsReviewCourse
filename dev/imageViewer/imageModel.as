package imageViewer{	import flash.events.Event;	import flash.events.EventDispatcher;	public class imageModel extends EventDispatcher {		public static var XMLUPDATE:String = 'XMLUpdated';		public static var GALLERYADD:String = 'galleryadd';		public static var UPDATEGALL:String = 'updateGallery';		public static var SUBMENUUPDATE:String = 'submenuupdated';		public static var MAINMENUUPDATE:String = 'mainmenuupdated';		public static var STATECHANGE:String = 'stateChanged';		public static var MODCHANGE:String = 'modChanged';		public static var MODUPDATE:String = 'ModuleUpdated';		private var _imageXml:XML;		private var _stageWidth:int;		private var _stageHieght:int;		public var fullGall:Array = [];		private var indiThumb:Array = [];		private var totalThumbs:int = 0;		private var numSections:int = 0;		public var gallLength:int = 0 		private var viewGallLength:int = 398		private var currentThumbHolderPos:int=0		public var newThumbHolderPos:int=0		private var thumbPadding:int = 2;		private var thumbStartx:int = 0;		private var thumbStarty:int = 0;		public function imageModel() {			// constructor code		}		public function setXml(xml:XML):void {			_imageXml = new XML(xml);			totalThumbs = _imageXml.image.length();			galleryBuild();			dispatchEvent(new Event(imageModel.XMLUPDATE));		}		public function galleryBuild():void {			for (var i:int=0; i<totalThumbs; i++)			{				indiThumb = [i,_imageXml.image[i]. @ caption,_imageXml.image[i]. @ locate,thumbStartx,thumbStarty];				fullGall[i] = indiThumb;				if (i==totalThumbs-1) {					thumbStarty +=  Number(_imageXml.image[i]. @ thumbheight)				}else {					thumbStarty +=  Number(_imageXml.image[i]. @ thumbheight) + thumbPadding;				}			}			galleryLength() 			dispatchEvent(new Event(imageModel.GALLERYADD));		}				private function galleryLength():void {			numSections = Math.ceil(thumbStarty/viewGallLength)			gallLength = thumbStarty		}				public function moveGallery(s:String,i:int):void {			currentThumbHolderPos=i			if (s=="down") {				newThumbHolderPos=currentThumbHolderPos-viewGallLength				if (newThumbHolderPos<-1*(viewGallLength*(numSections-1))){					newThumbHolderPos=28				}			}			if (s=="up") {				newThumbHolderPos=currentThumbHolderPos+viewGallLength				if (newThumbHolderPos>(viewGallLength*(numSections-1))){					newThumbHolderPos=28				}			}			dispatchEvent(new Event(imageModel.UPDATEGALL));		}							}}