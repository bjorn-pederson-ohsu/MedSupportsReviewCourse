package landing{	import flash.display.MovieClip;	import buttonBuild.landingButtonSet;	//import buttonBuild.supportButtonSet;	import buttonBuild.tileBuilder;	import mainAreaBuild.modulebg;	import flash.events.EventDispatcher;	import flash.events.Event;	import caurina.transitions.Tweener;	import caurina.transitions.properties.DisplayShortcuts;	import caurina.transitions.properties.FilterShortcuts;	public class landingView extends MovieClip {		//public static var UPDATE:String = 'ButtonClicked';		private var _model:Object;		private var _controller:Object;		//private var infoSpot:infoArea = new infoArea  ;		private var infoSpot:modulebg;		//private var infoSpot:modulebg =new modulebg		private var descBox:descriptionBox;		private var dircBox:descriptionBox;		private var landingBut:landingButtonSet;		private var xStartLanding:int = 20;		private var yStartLanding:int = 110;		private var paddingLanding:int = 15;		//private var infoButton:supportButtonSet;		//private var faqButton:supportButtonSet;		private var tileButton:tileBuilder;		private var mainCourse:mainTitleArea;		private var viewXml:XML;		public function landingView(m:Object,c:Object) {			// constructor code			_model = m;			_controller = c;			DisplayShortcuts.init();			FilterShortcuts.init();			_model.addEventListener(landingModel.XMLUPDATE,xmlupdate);			_model.addEventListener(landingModel.TILEUPDATE,tileBuild);			_model.addEventListener(landingModel.MODUPDATE,modupdate);			_model.addEventListener(landingModel.STATECHANGE, closeDown);			addEventListener(Event.ADDED_TO_STAGE,onAddedToStage);			//trace("added to Stage");		}		private function onAddedToStage(event:Event):void {			_controller.loadXml();			removeEventListener(Event.ADDED_TO_STAGE,onAddedToStage);		}		private function xmlupdate(event:Event):void {			viewXml = new XML(_model.xml);			mainTitleBuild();			setArea();			_controller.tileNum(viewXml.module.length(), stage.stageWidth);			supportBuild();		}		private function setArea():void {			infoSpot = new modulebg(390,930);			addChild(infoSpot);			infoSpot.name = "infoSpot";			infoSpot.x = 10;			infoSpot.y = 125;			setBoxes();		}		private function setBoxes():void {			descBox = new descriptionBox  ;			infoSpot.addChild(descBox);			descBox.slider.visible = false;			descBox.name = "descBox";			descBox.y = 20;			descBox.descText.text = viewXml.intro;			if (descBox.descText.maxScrollV > 1)			{				descBox.slider.visible = true;				descBox.slider.maxScrollPosition = descBox.descText.textHeight;				descBox.x = .5 * infoSpot.width - .5 * descBox.width;			} else			{				descBox.x = .5 * infoSpot.width - .5 * descBox.descText.width;			}			dircBox = new descriptionBox  ;			infoSpot.addChild(dircBox);			dircBox.slider.visible = false;			dircBox.visible = false;			dircBox.name = "dircBox";			dircBox.descText.width = 270;			dircBox.descText.height = 266;			dircBox.slider.x = 270;			dircBox.slider.y = 0;			dircBox.slider.height = dircBox.descText.height;			dircBox.x = 639;			dircBox.y = .5 * infoSpot.height - .5 * dircBox.height;			setButtons();		}		private function setButtons():void {			var names:Array = ["Start","Continue","Feedback"];			var n:uint = names.length - 1;			for (var i:int = 0; i <= n; i++)			{				landingBut = new landingButtonSet("" + names[i] + "");				infoSpot.addChild(landingBut);				landingBut.name = "" + names[i].toLocaleLowerCase() + "Button";				//trace(landingBut.name);				landingBut.addEventListener(landingButtonSet.UPDATE,update);				landingBut.x = xStartLanding;				landingBut.y = yStartLanding;				yStartLanding +=  landingBut.height + paddingLanding;				landingBut.visible = false;			}		}		private function supportBuild():void {			/*infoButton = new supportButtonSet("My Info");			addChild(infoButton);			infoButton.name = "infoButton";			infoButton.addEventListener(supportButtonSet.UPDATE,update);			infoButton.x = 840;			infoButton.y = 17;			faqButton = new supportButtonSet("FAQ");			addChild(faqButton);			faqButton.name = "faqButton";			faqButton.addEventListener(supportButtonSet.UPDATE,update);			faqButton.x = 840;			faqButton.y = 74;*/			displayList();		}		private function tileBuild(event:Event):void {			//trace("Starting tileBuild");			trace(_model.fullBar.length);			var tileNum:int;			var n:uint = _model.fullBar.length - 1;			trace(_model.fullBar[0]);			for (var i:int = 0; i <= n; i++)			{				tileButton = new tileBuilder("" + _model.fullBar[i][4] + "","" + viewXml.module[i].status + "",_model.fullBar[i][0],_model.fullBar[i][1],i);				addChild(tileButton);				tileButton.name = "tile";				//trace("Button number: "+tileButton.buttonNum);				tileButton.x = _model.fullBar[i][2];				tileButton.y = _model.fullBar[i][3];				//trace(tileButton.width + paddingTile);				//xStartTile +=  tileButton.width + paddingTile;				tileButton.addEventListener(tileBuilder.UPDATE,update);			}			//displayList()		}		private function mainTitleBuild():void {			//trace(stage.stageWidth);			mainCourse = new mainTitleArea  ;			addChild(mainCourse);			//trace("mainCourse.x: "+mainCourse.x)			mainCourse.name = "mainCourse";			mainCourse.mainTitle.text = viewXml.course;			trace("mainCourse.width: "+mainCourse.width+" Stage Width: "+stage.stageWidth);			mainCourse.x = (.5*stage.stageWidth)-(.5*mainCourse.width);			//trace("mainCourse.x: "+mainCourse.x)			mainCourse.y = 50;		}		private function displayList():void {			for (var u:int = numChildren-1; u >=0; u--)			{				trace("Everything on: "+u,getChildAt(u).name);			}			//trace(getChildAt(0));		}		public function blurStage():void {			var n:uint = this.numChildren - 1;			//Blurs out everything on the stage			for (var i:Number=0; i<=n; i++)			{				Tweener.addTween(				this.getChildAt(i),{				 time:.2,				 _Blur_blurX:10,				 _Blur_blurY:10,				 transition:"easeOutQuad"				 });			}		}		public function clearViewStage():void {			var n:uint = this.numChildren - 1;			//Blurs out everything on the stage			for (var i:Number=0; i<=n; i++)			{				Tweener.addTween(				this.getChildAt(i),{				 time:.2,				 _Blur_blurX:0,				 _Blur_blurY:0,				 transition:"easeOutQuad"				 });			}		}		private function update(event:Event):void {			//trace(infoSpot.getChildAt(0).name,infoSpot.getChildAt(1).name,infoSpot.numChildren);			for (var u:int = infoSpot.numChildren-1; u >=1; u--)			{				//trace(u,infoSpot.getChildAt(u).name,infoSpot.getChildAt(u).visible);				if ((u>1)&&(infoSpot.getChildAt(u).visible == true))				{					Tweener.addTween(infoSpot.getChildAt(u),{_autoAlpha:0,time:.3,transition:"easeOutQuad"});				} else if ((u==1)&&(infoSpot.getChildAt(1).visible == true))				{					Tweener.addTween(infoSpot.getChildAt(1),{_autoAlpha:0,time:.3,transition:"easeOutQuad", onComplete: controlClick,onCompleteParams:[event] });				} else if ((u==1)&&(infoSpot.getChildAt(1).visible == false))				{					controlClick(event);				}			}			//trace("From landing: " + event.target.name);		}		private function controlClick(event:Event):void {			//trace("After Turn off: " + event.target.name);			_controller.buttonClick(event);		}		private function modupdate(event:Event):void {			//trace(viewXml.module[_model.mod].description);			descBox.descText.text = viewXml.module[_model.mod].description;			descBox.x = 226;			Tweener.addTween(descBox,{_autoAlpha:1,delay:.4,time:.3,transition:"easeOutQuad"});			if (descBox.descText.maxScrollV > 1)			{				descBox.slider.visible = true;				descBox.slider.maxScrollPosition = descBox.descText.textHeight;				//descBox.x =uint((.33*infoSpot.bg.width) -(.5*descBox.width));			} else			{				//descBox.x = uint((.33*infoSpot.bg.width) - (.5*descBox.descText.width));				descBox.slider.visible = false;			}			dircBox.descText.text = viewXml.module[_model.mod].direction;			Tweener.addTween(dircBox,{_autoAlpha:1,delay:.4,time:.3,transition:"easeOutQuad"});			if (dircBox.descText.maxScrollV > 1)			{				dircBox.slider.visible = true;				dircBox.slider.maxScrollPosition = dircBox.descText.textHeight;				//dircBox.x = uint((.85*infoSpot.bg.width) -(.5*dircBox.width));			} else			{				//dircBox.x = uint((.85*infoSpot.bg.width) - (.5*dircBox.descText.width));				dircBox.slider.visible = false;			}			//trace(infoSpot.getChildAt(3).name,infoSpot.getChildAt(4).name);			//trace(viewXml.module[_model.mod].status);			if (viewXml.module[_model.mod].status == "Start")			{				//infoSpot.getChildAt(3).visible = true;				Tweener.addTween(infoSpot.getChildAt(3),{_autoAlpha:1,delay:.4,time:.3,transition:"easeOutQuad"});			}			if (viewXml.module[_model.mod].status == "Continue")			{				//infoSpot.getChildAt(4).visible = true;				Tweener.addTween(infoSpot.getChildAt(4),{_autoAlpha:1,delay:.4,time:.3,transition:"easeOutQuad"});			}		}		private function closeDown(event:Event):void {			//trace(event);			for (var u:int = numChildren-1; u >=0; u--)			{				trace(u,getChildAt(u).name);				if (u > 0)				{					Tweener.addTween(getChildAt(u),{_autoAlpha:0,time:.3,transition:"easeOutQuad"});				}				if (u == 0)				{					//trace("last alpha down: "+getChildAt(u).name);					Tweener.addTween(getChildAt(u),{_autoAlpha:0,time:.3,transition:"easeOutQuad", onComplete:removePieces});					//Tweener.addTween(getChildAt(u),{alpha:0,time:.3,transition:"easeOutQuad"})				}			}		}		private function removePieces():void {			//trace("firing removePieces");			_model.removeEventListener(landingModel.XMLUPDATE,xmlupdate);			_model.removeEventListener(landingModel.MODUPDATE,modupdate);			_model.removeEventListener(landingModel.STATECHANGE,closeDown);			var c:int = numChildren - 1;			for (c; c>=0; c--)			{				if (c >= 7)				{					//getChildAt(c).removeEventListener(supportButtonSet.UPDATE,update);					removeChildAt(c);				}				if (c < 7 && c >= 2)				{					getChildAt(c).removeEventListener(tileBuilder.UPDATE,update);					removeChildAt(c);				}				if (c == 1)				{					infoSpot.getChildByName("startButton").removeEventListener(landingButtonSet.UPDATE,update);					infoSpot.getChildByName("continueButton").removeEventListener(landingButtonSet.UPDATE,update);					infoSpot.getChildByName("feedbackButton").removeEventListener(landingButtonSet.UPDATE,update);					removeChildAt(1);				}				if (c == 0)				{					removeChild(mainCourse);					//infoButton=null					//faqButton=null					mainCourse = null;					tileButton = null;					landingBut = null;					infoSpot = null;					descBox = null;					dircBox = null;					mainCourse = null;					//trace("events removed");					_controller.removalComplete(_model.mod);				}			}		}	}}