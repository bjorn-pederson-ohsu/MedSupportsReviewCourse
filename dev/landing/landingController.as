package landing{	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.MouseEvent;	import com.reflektii.db.dbxml;	public class landingController {		private var _model:Object;		private var _xmlFetch:dbxml;		public function landingController(model:Object):void {			_model = model;		}		public function loadXml():void {			var url:String = "landing.xml";			_xmlFetch = new dbxml(url);			_xmlFetch.addEventListener(dbxml.UPDATE,update);		}		public function update(event:Event):void {			_model.xml = _xmlFetch.xmlreturn;			_xmlFetch.removeEventListener(dbxml.UPDATE,update);		}		public function buttonClick(event:Event):void {			switch (event.target.name)			{				case "infoButton" :					supportButtonClick(1);					break;				case "faqButton" :					supportButtonClick(2);					break;				case "startButton" :					moduleStartClick("start");					break;				case "continueButton" :					moduleStartClick("contine");					break;				case "feedbackButton" :					moduleStartClick("feedback");					break;				case "tile" :					tileButtonClick(event.target.buttonNum);					break;			}		}		private function supportButtonClick(i:int):void {			//trace("From controller: SupportButton was clicked");		}		private function tileButtonClick(u:int):void {			_model.mod = u;		}		private function moduleStartClick(s:String):void {			//trace("From controller: Start or Continue Button was clicked");			_model.modState = s;		}		public function removalComplete(i:int):void {			_model.loadModule = i;		}		public function tileNum(i:uint,v:uint):void {			_model.tileCalc(i,v);		}	}}