package textBuilder{	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.display.Sprite;	import flash.display.Shape;	import caurina.transitions.Tweener;	import caurina.transitions.properties.FilterShortcuts;	import caurina.transitions.properties.ColorShortcuts;	import flash.events.MouseEvent;	import flashx.textLayout.compose.StandardFlowComposer;	import flashx.textLayout.container.ContainerController;	import flashx.textLayout.elements.ParagraphElement;	import flashx.textLayout.elements.SpanElement;	import flashx.textLayout.elements.TextFlow;	import flashx.textLayout.formats.*;	import flashx.textLayout.conversion.TextConverter;	import flashx.textLayout.edit.SelectionManager;	public class questionAreaSelect extends Sprite {		public static var UPDATE:String = 'ButtonClicked';		private var _textFlow:TextFlow;		private var txt:String;		private var textSpace:Sprite;		private var textHeight:int;		private var h:int;		private var w:int;		private var fontSize:int		private var cont:ContainerController;		public var buttonNum:int;		public function questionAreaSelect(s:String, i:int, j:int, t:int, u:int) {			txt = new String(s);			w = i;			h = j;			fontSize=t			buttonNum=u			//trace(txtXML);			addEventListener(Event.ADDED_TO_STAGE,buildTextSpace);		}		private function buildTextSpace(event:Event):void {			removeEventListener(Event.ADDED_TO_STAGE,buildTextSpace);			addEventListener(Event.REMOVED_FROM_STAGE, removedFromStage);			drawSpace();		}		private function drawSpace():void {			//if (getChildByName=="sl")			/*textSpace = new Sprite ();			addChild(textSpace);*/			textSpace = new Sprite ();			textSpace.name="textSpace"			addChild(textSpace);			beginFlow(txt);		}		private function beginFlow(s:String):void {			_textFlow = new TextFlow();			_textFlow.flowComposer = new StandardFlowComposer();			_textFlow = TextConverter.importToFlow(s,TextConverter.PLAIN_TEXT_FORMAT);			_textFlow.textAlign = TextAlign.LEFT;			_textFlow.verticalAlign = VerticalAlign.MIDDLE;			_textFlow.fontFamily = "Segoe UI";			_textFlow.fontLookup = "embeddedCFF";			_textFlow.fontSize = fontSize;			cont = new ContainerController(textSpace,(w),(h));			_textFlow.flowComposer.addController(cont);			//_textFlow.interactionManager = new SelectionManager();			_textFlow.flowComposer.updateAllControllers();			buttonFunction();		}				private function buttonFunction():void {			textSpace.buttonMode = true;			textSpace.mouseChildren = false;			textSpace.useHandCursor = true;			trace(textSpace.parent.name, 1)			textSpace.addEventListener(MouseEvent.MOUSE_OVER,buttonOver);			trace(textSpace.parent.name, 2)			textSpace.addEventListener(MouseEvent.MOUSE_OUT, buttonOut);			trace(textSpace.parent.name, 3)			textSpace.addEventListener(MouseEvent.CLICK, buttonDown);			/*textSpace.cacheAsBitmap=true			textSpace.addEventListener(Event.REMOVED_FROM_STAGE, removedFromStage);*/		}		private function buttonOver(event:MouseEvent):void {			//trace ("buttonOver") 			//Tweener.addTween(bgFrame,{time:.2,_color:0xffffff,transition:"easeOutQuad"});			Tweener.addTween(event.target,{time:.2,_Glow_alpha:.75,_Glow_blurX:15,_Glow_blurY:15,_Glow_color:0x00CC00,_Glow_inner:false,transition:"easeOutQuad"});		}		private function buttonOut(event:MouseEvent):void {			//trace ("buttonOut") 			Tweener.addTween(textSpace,{time:.2,_Glow_alpha:0,_Glow_blurX:0,_Glow_blurY:0,_Glow_color:0x00CC00,_Glow_inner:false,transition:"easeOutQuad"});			//Tweener.addTween(bgFrame,{time:.2,_color:0xb9bbb9,transition:"easeOutQuad"});		}		private function buttonDown(event:MouseEvent):void {			dispatchEvent(new Event(questionAreaSelect.UPDATE));		}		private function removedFromStage(event:Event):void {			trace("textArea removed");			_textFlow.flowComposer = null;			_textFlow = null;			cont=null;		}	}}