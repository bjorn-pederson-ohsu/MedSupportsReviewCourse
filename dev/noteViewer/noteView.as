package noteViewer{	import flash.display.MovieClip;	import flash.events.EventDispatcher;	import flash.events.Event;	import flash.display.Shape;	import fl.controls.ComboBox;	import caurina.transitions.Tweener;	import caurina.transitions.properties.DisplayShortcuts;	import buttonBuild.noteButton;	import buttonBuild.arrowBuilder;	public class noteView extends MovieClip {		private var _model:Object;		private var _controller:Object;		private var _xml:XML;		private var cb:ComboBox = new ComboBox ();		private var thumbHolder:MovieClip;		private var thumbMask:Shape;		private var up:arrowBuilder;		private var down:arrowBuilder;		private var picHolder:MovieClip;		private var picBg:Shape;		private var i:int = 0;		private var caption:captionBox;		private var bgwidth:int;		private var bgheight:int;		public function noteView(m:Object,c:Object, i:int, v:int) {			// constructor code			_model = m;			_controller = c;			bgwidth = i;			bgheight = v;			DisplayShortcuts.init();			//trace(stage.stageWidth,stage.stageHeight);			_model.addEventListener(noteModel.XMLUPDATE,xmlupdate);			_model.addEventListener(noteModel.GALLERYADD,buildGallery);			_model.addEventListener(noteModel.UPDATEGALL,moveGallery);			addEventListener(Event.ADDED_TO_STAGE,onAddedToStage);			//trace("added to Stage");		}		private function onAddedToStage(event:Event):void {			_controller.loadXml();			removeEventListener(Event.ADDED_TO_STAGE,onAddedToStage);			addEventListener(Event.REMOVED_FROM_STAGE, removeFromStage);		}		private function xmlupdate(event:Event):void {			//buildGalleryParts();			//buildGalleryPics();		}		private function buildGallery(event:Event):void {			if (numChildren==0){				buildGalleryParts();				buildGalleryPics()				/*trace(_model.fullGall.length)				setThumbs()*/			}else{			trace(_model.fullGall.length)				i=0				setThumbs()			//setThumbs()			}		}		private function buildGalleryParts():void {			trace("from helpView: "+bgwidth, bgheight);			up = new arrowBuilder("up");			addChild(up);			trace("up Width: "+up.width) 			//up.x = bgwidth - up.width - 28;			up.x=28			up.y = 5;			up.name = "upArrow";			up.addEventListener(arrowBuilder.UPDATE,update);			down = new arrowBuilder("down");			addChild(down);			down.x = up.x;			down.y = bgheight - down.height - 5;			down.name = "downArrow";			down.addEventListener(arrowBuilder.UPDATE,update);			var maskHeight:int = (down.y-10)-(up.y + up.height);			thumbHolder= new MovieClip() ;			addChild(thumbHolder);			thumbHolder.name = "thumbHolder";			//thumbHolder.x=(bgwidth-118) ;			thumbHolder.x=10			thumbHolder.y = up.y + up.height + 5;			thumbMask = new Shape();			addChild(thumbMask);			thumbMask.name = "thumbMask";			//thumbMask.x=(bgwidth-118);			thumbMask.x=10			//thumbMask.y=(up.y + up.height +5);			thumbMask.y=thumbHolder.y			thumbMask.graphics.beginFill(0x000000,1);			thumbMask.graphics.drawRect(0,0,250,maskHeight);			thumbMask.graphics.endFill();			thumbMask.alpha = .5;			trace(maskHeight,thumbMask.height, thumbMask.x, thumbMask.y, (up.y + up.height + 5));			thumbHolder.mask = thumbMask;			setThumbs();			setComboBox();			displayList();		}		private function setThumbs():void {			var m:uint = _model.fullGall.length - 1;			var notestartX:int = 10			var notestartY:int = 15			for (var i:int = 0; i <= m; i++)			{				var noteBut = new noteButton(_model.fullGall[i][1],_model.fullGall[i][0]);				noteBut.name = "noteBut" + i;				thumbHolder.addChild(noteBut);				trace(noteBut.name);				noteBut.addEventListener(noteButton.UPDATE, update);				noteBut.x = notestartX;				noteBut.y = notestartY;				notestartY +=  noteBut.height + 15;				if (i==m){					_model.galleryLength(notestartY)				}			}			trace ("thumbHolder: "+thumbHolder.height)			if (_model.fullGall.length < 9)				{					up.visible = false;					down.visible = false;				} else				{					up.visible = false;					down.visible = true;				}			//old stuff to delete			/*trace (_model.fullGall.length,_model.fullGall[i][1],_model.fullGall[i][0],_model.fullGall[i][2],_model.fullGall[i][3],_model.fullGall[i][4])			_photo = new photoThumb(_model.fullGall[i][1],_model.fullGall[i][0],_model.fullGall[i][2]);			thumbHolder.addChild(_photo);			_photo.x = _model.fullGall[i][3];			_photo.name = "photo" + i;			_photo.addEventListener(photoThumb.UPDATE,update);			_photo.y = _model.fullGall[i][4];			i++;			if (i < _model.fullGall.length)			{				setThumbs();			} else			{				if (_model.fullGall.length < 5)				{					up.visible = false;					down.visible = false;				} else				{					up.visible = false;					down.visible = true;				}				displayList();				trace("number of thumbHolder: "+thumbHolder.numChildren);			}*/		}		private function displayList():void {			for (var u:int = numChildren-1; u >=0; u--)			{				trace("Everything on: "+u,getChildAt(u).name,getChildAt(u).x,getChildAt(u).y, getChildAt(u).alpha);			}		}		private function setComboBox():void {			addChild(cb);			cb.name = "cb";			cb.width = 125;			//cb.x = bgwidth - cb.width - 18;			cb.x = 10 			cb.y = up.y - cb.height - 5;			cb.useHandCursor = true;			//cb.embedFonts=true			cb.setStyle("embedFonts", true);			cb.prompt = "Select a date";			for (var n:int=0; n<_model._noteXml.area.length(); n++)			{				cb.addItem({label:_model._noteXml.area[n]. @ name});			}			cb.addEventListener(Event.CHANGE, changeHandler);		}		private function buildGalleryPics():void {			picHolder= new MovieClip();			addChildAt(picHolder,1);			picHolder.name = "picHolder";			picHolder.x = bgwidth-810;			picHolder.y = 10;			picBg = new Shape();			var picBgHieght:int = bgheight - 20;			picHolder.addChild(picBg);			picBg.name = "picBg";			picBg.graphics.lineStyle(1, 0xffffff, .3);			picBg.graphics.beginFill(0xffffff,.15);			picBg.graphics.drawRoundRect(0,0,790,picBgHieght,10);			picBg.graphics.endFill();		}		private function changeHandler(event:Event):void {			trace("from changeHandler: "+event.target.selectedIndex);			if (down.visible==true) {				Tweener.addTween(up,{_autoAlpha:0,time:.3,transition:"easeOutQuad"});				Tweener.addTween(down,{_autoAlpha:0,time:.3,transition:"easeOutQuad"});			}			for (var n:int=thumbHolder.numChildren-1; n>=0; n--){				trace(n, thumbHolder.numChildren);								if (n == 0)				{					Tweener.addTween(thumbHolder.getChildAt(n),{_autoAlpha:0,time:.3,transition:"easeOutQuad", onComplete:cbClick, onCompleteParams:[event]});				}else{					Tweener.addTween(thumbHolder.getChildAt(n),{_autoAlpha:0,time:.3,transition:"easeOutQuad"});				}			}		}		private function cbClick(event:Event):void {			trace ("at cbClick")			thumbHolder.y = 28			while (thumbHolder.numChildren>0) {				trace(thumbHolder.numChildren);				thumbHolder.getChildAt(thumbHolder.numChildren - 1).removeEventListener(noteButton.UPDATE,update);				thumbHolder.removeChild(thumbHolder.getChildAt((thumbHolder.numChildren-1)));			}			_controller.noteSection(event.target.selectedIndex);		}		private function update(event:Event):void {			trace(event.target.name,thumbHolder.y );			if (event.target.name == "downArrow")			{				_controller.downGallery(thumbHolder.y);			} else if (event.target.name=="upArrow")			{				_controller.upGallery(thumbHolder.y);			} else			{				//cleanPhoto(event);			}		}		private function moveGallery(event:Event):void {			trace("from View: "+_model.newThumbHolderPos)			Tweener.addTween(thumbHolder,{y:_model.newThumbHolderPos,time:.3,transition:"easeOutQuad", onComplete:arrowCheck});		}		private function arrowCheck():void {			/*if (thumbHolder.y < 28 || thumbHolder.y > 28) {			up.visible=true			down.visible=true			}*/			if (thumbHolder.y != 28)			{				Tweener.addTween(up,{_autoAlpha:1,time:.3,transition:"easeOutQuad"});				Tweener.addTween(down,{_autoAlpha:1,time:.3,transition:"easeOutQuad"});			}			if (thumbHolder.y == 28)			{				Tweener.addTween(up,{_autoAlpha:0,time:.3,transition:"easeOutQuad"});			}		}		/*private function cleanPhoto(event:Event):void {			trace(event.target.buttonNum);			Tweener.addTween(caption,{_autoAlpha:0,time:.3,transition:"easeOutQuad"});			Tweener.addTween(_videoBig,{_autoAlpha:0,time:.3,transition:"easeOutQuad", onComplete: completeClick,onCompleteParams:[event] });		}		private function completeClick(event:Event):void {			_videoBig.closeDown()			picHolder.removeChild(_videoBig);			_videoBig=null			picHolder.removeChild(caption);			setVid(event.target.buttonNum);		}*/		private function removeFromStage(event:Event):void {			removeChild(up);			removeChild(down);			up = null;			down = null;			cb.removeEventListener(Event.CHANGE, changeHandler);			removeChild(cb);			cb = null;			removeChild(thumbMask);			thumbMask = null;			while (thumbHolder.numChildren>0) {				trace(thumbHolder.numChildren);				thumbHolder.getChildAt(thumbHolder.numChildren - 1).removeEventListener(noteButton.UPDATE,update);				thumbHolder.removeChild(thumbHolder.getChildAt((thumbHolder.numChildren-1)));			}			removeChild(thumbHolder);			thumbHolder = null;			while (picHolder.numChildren>0) {				trace(picHolder.numChildren);				picHolder.removeChild(picHolder.getChildAt((picHolder.numChildren-1)));			}			removeChild(picHolder);			_model.removeEventListener(noteModel.XMLUPDATE,xmlupdate);			_model.removeEventListener(noteModel.GALLERYADD,buildGallery);			_model.removeEventListener(noteModel.UPDATEGALL,moveGallery);			_model = null;			_controller = null;			_xml = null;			up = null;			down = null;		}	}}